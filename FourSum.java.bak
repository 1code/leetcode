import java.util.Arrays;
import java.util.HashSet;
import java.util.Iterator;

public class Solution {
    public ArrayList<ArrayList<Integer>> fourSum(int[] num, int target) {
        // Start typing your Java solution below
        // DO NOT write main() function
        Arrays.sort(num);
        HashSet<Integer> uniqueNum = new HashSet<Integer>();
        int size = num.length;
        for(int i = 0; i < size; i++)
            uniqueNum.add(target - num[i]);
        Iterator<Integer> uniqueNumIter = uniqueNum.iterator();
        HashSet<ArrayList<Integer>> uniqueResult = new HashSet<ArrayList<Integer>>();
        ArrayList<ArrayList<Integer>> results = new ArrayList<ArrayList<Integer>>();
        
        while(uniqueNumIter.hasNext()){
        	int newTarget = uniqueNumIter.next();
	        for(int i = 0; i < size; i++){
	        	int a = num[i];
	        	for(int j = i + 1, k = size - 1; k > j;){
	        		int b = num[j];
	        		int c = num[k];
	        		int sum = a + b + c;
	        		int diff = sum - newTarget;
	        		if(diff > 0)
	        			k--;
	        		else if(diff < 0)
	        			j++;
	        		else{
	        			ArrayList<Integer> result = new ArrayList<Integer>();
	        			int d = target - newTarget;
	        			if(d < a){
	        				result.add(d);
	        				result.add(a);
	        				result.add(b);
	        				result.add(c);
	        			}
	        			else if (d < b){
	        				result.add(a);
	        				result.add(d);
	        				result.add(b);
	        				result.add(c);
	        			}
	        			else if (d < c){
	        				result.add(a);
	        				result.add(b);
	        				result.add(d);
	        				result.add(c);
	        			}
	        			else{
	        				result.add(a);
	        				result.add(b);
	        				result.add(c);
	        				result.add(d);
	        			}
                        if(!uniqueResults.contain(result)){
                            uniqueResults.add(result);
                            results.add(result);
                        }
	        		}
	        	}
	        }
        }
        return result;
    }
}